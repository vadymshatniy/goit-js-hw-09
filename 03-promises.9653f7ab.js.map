{"mappings":"AACA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAkBF,SAASC,cAAc,uBACzCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAC5BD,SAASC,cAAc,UAEtC,IAAII,EAAW,EAEf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEK,SAAAR,E,MAAUC,IAEhBG,EAAI,CAAEI,SAAAR,E,MAAUC,G,GAEjBA,EAAM,G,CA2BbT,EAAKiB,iBAAiB,UAvBtB,SAAsBC,GACpBA,EAAMC,iBACNb,GAAsB,EACtB,MAAMc,EAAaC,OAAOlB,EAAgBmB,OACpCC,EAAOF,OAAOjB,EAAUkB,OACxBE,EAASH,OAAOhB,EAAYiB,OAClC,GAAIF,EAAa,GAAKG,EAAO,GAAKC,EAAS,EACzCC,MAAM,wCACD,CACL,IAAIC,EAAQN,EACZ,IAAK,IAAIO,EAAI,EAAGA,EAAIH,EAAQG,IAC1BpB,EAAcD,EAAWqB,EAAGD,GACzBE,MAAK,EAAGZ,SAAAa,EAAQpB,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBF,QAAiBpB,MAAU,IAE7DuB,OAAM,EAAGhB,SAAAiB,EAAQxB,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBE,QAAexB,MAAU,IAE7DiB,GAASH,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector(\".form\");\nconst firstDelayField = document.querySelector('input[name=\"delay\"]');\nconst stepField = document.querySelector('input[name=\"step\"]');\nconst amountField = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector(\"button\");\n\nlet position = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay }); // Fulfill\n      } else {\n        rej({ position, delay })  // Reject\n      }\n    }, delay);\n  });\n};\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  position = position + 1;\n  const firstDelay = Number(firstDelayField.value);\n  const step = Number(stepField.value);\n  const amount = Number(amountField.value);\n  if (firstDelay < 0 || step < 0 || amount < 0) {\n    alert(\"Please set only positive values!\")\n  } else {\n    let delay = firstDelay;\n    for (let i = 0; i < amount; i++) {\n      createPromise(position + i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += step;\n    }\n  }\n};\n\nform.addEventListener('submit', onFormSubmit);"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayField","$47d4ff9957288465$var$stepField","$47d4ff9957288465$var$amountField","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position1","delay","Promise","res","rej","setTimeout","Math","random","position","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","alert","delay1","i","then","position2","console","log","catch","position3"],"version":3,"file":"03-promises.9653f7ab.js.map"}